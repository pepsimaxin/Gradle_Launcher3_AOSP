buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.3.1'
        classpath PROTOBUF_CLASS_PATH
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0"
    }
}

final String ANDROID_TOP = "${rootDir}/../../.."
final String FRAMEWORK_PREBUILTS_DIR = "${ANDROID_TOP}/prebuilts/framework_intermediates/"

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdk 34

    defaultConfig {
        minSdkVersion 33

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    // The flavor dimensions for build variants (e.g. aospWithQuickstep, aospWithoutQuickstep)
    // See: https://developer.android.com/studio/build/build-variants#flavor-dimensions
    flavorDimensions "app", "recents"

    productFlavors {
        aosp {
            dimension "app"
            applicationId 'com.android.launcher3'
            testApplicationId 'com.android.launcher3.tests'
        }

        l3go {
            dimension "app"
            applicationId 'com.android.launcher3'
            testApplicationId 'com.android.launcher3.tests'
        }

        withQuickstep {
            dimension "recents"

            minSdkVersion 28
        }

        withoutQuickstep {
            dimension "recents"
        }
    }

    // Disable release builds for now
    android.variantFilter { variant ->
        if (variant.buildType.name.endsWith('release')) {
            variant.setIgnore(true)
        }
    }

    sourceSets {
        main {
            res.srcDirs  = ['res',
                            'iconloaderlib/res',
                            'SystemUIAnimationLib/res']
            java.srcDirs = ['src',
                            'src_plugins',
                            'iconloaderlib/src',
                            'iconloaderlib/src_full_lib',
                            'animationlib/src',
                            'tests/shared',
                            'SystemUIAimationLib/src',
                            'viewcapturelib/src',
                            'src_shortcuts_overrides',
                            'src_build_config']
            manifest.srcFile 'AndroidManifest-common.xml'
            proto {
                srcDirs = ['protos/',
                           'quickstep/protos_overrides/',
                           'viewcapturelib/src/com/android/app/viewcapture/proto']
            }
        }

//        androidTest {
//            res.srcDirs = ['tests/res']
//            java.srcDirs = ['tests/src', 'tests/tapl']
//            manifest.srcFile "tests/AndroidManifest-common.xml"
//        }
//
//        androidTestDebug {
//            manifest.srcFile "tests/AndroidManifest.xml"
//        }

//        aosp {
//            java.srcDirs = ['src_flags', 'src_shortcuts_overrides']
//        }

        aospWithoutQuickstep {
            manifest.srcFile "AndroidManifest.xml"
        }

        aospWithQuickstep {
            manifest.srcFile "quickstep/AndroidManifest-launcher.xml"
        }

        l3go {
            res.srcDirs = ['go/res']
            java.srcDirs = ['go/src']
            manifest.srcFile "go/AndroidManifest.xml"
        }

        l3goWithoutQuickstepDebug {
            manifest.srcFile "AndroidManifest.xml"
        }

        l3goWithQuickstepDebug {
            manifest.srcFile "quickstep/AndroidManifest-launcher.xml"
        }

        withoutQuickstep {
            java.srcDirs = ['src_ui_overrides']
        }

        withQuickstep {
            res.srcDirs = ['quickstep/res', 'quickstep/recents_ui_overrides/res']
            java.srcDirs = ['quickstep/src', 'quickstep/recents_ui_overrides/src']
            manifest.srcFile "quickstep/AndroidManifest.xml"
        }
    }

    kotlin {
        jvmToolchain(17)
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs = ["-Xjvm-default=all"]
    }
}

allprojects {
    repositories {
        maven { url "../../../prebuilts/sdk/current/androidx/m2repository" }
        maven { url "../../../prebuilts/fullsdk-darwin/extras/android/m2repository" }
        maven { url "../../../prebuilts/fullsdk-linux/extras/android/m2repository" }
        mavenCentral()
        google()
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ['*.jar', '*.aar'])

    implementation "com.google.android.material:material:${ANDROID_X_VERSION}"
    implementation "androidx.dynamicanimation:dynamicanimation:${ANDROID_X_VERSION}"
    implementation "androidx.preference:preference-ktx:${ANDROID_X_VERSION}"
    implementation "androidx.slice:slice-core:${ANDROID_X_VERSION}"
    implementation "androidx.slice:slice-builders:${ANDROID_X_VERSION}"

    // noinspection GradleDependency
    implementation "androidx.recyclerview:recyclerview:1.4.0-alpha01"
    implementation 'androidx.core:core-animation:1.0.0-rc01'
    implementation 'com.google.protobuf:protobuf-javalite:3.22.3'


    api 'com.airbnb.android:lottie:6.3.0'
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = "com.google.protobuf:protoc:3.22.3"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
                java {
                    option "lite"
                }
            }
        }
    }
}
